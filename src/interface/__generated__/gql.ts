/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "query GetAllFridgeMaster {\n  custom_dessert_master {\n    id: custom_dessert_id\n    name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_fish_master {\n    id: custom_fish_id\n    name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_meat_master {\n    id: custom_meat_id\n    name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n  }\n  custom_other_master {\n    id: custom_other_id\n    name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_protein_source_master {\n    id: custom_protein_source_id\n    name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_seasoning_master {\n    id: custom_seasoning_id\n    name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_spice_master {\n    id: custom_spice_id\n    name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_staple_food_master {\n    id: custom_staple_food_id\n    name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_vegetable_master {\n    id: custom_vegetable_id\n    name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n  }\n  dessert_master {\n    id: dessert_id\n    name: dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  fish_master {\n    id: fish_id\n    name: fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  meat_master {\n    id: meat_id\n    name: meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: meat_master_meat_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  other_master {\n    id: other_id\n    name: other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  protein_source_master {\n    id: protein_source_id\n    name: protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  seasoning_master {\n    id: seasoning_id\n    name: seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  spice_master {\n    id: spice_id\n    name: spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  staple_food_master {\n    id: staple_food_id\n    name: staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  vegetable_master {\n    id: vegetable_id\n    name: vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n}": types.GetAllFridgeMasterDocument,
    "query GetAllDessertMasterAndUnitAndStocks {\n  GetDessertMasterAndUnitAndStocks: dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomDessertMasterAndUnitAndStocks: custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertMasterAndUnitAndStocks {\n  dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomDessertMasterAndUnitAndStocks {\n  custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertStockByUserIdAndDessertId($userId: String!, $dessertId: uuid!) {\n  dessert_stocks(where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}) {\n    stock_id\n    user_id\n    dessert_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertDessertStock($object: dessert_stocks_insert_input!) {\n  insert_dessert_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    dessert_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateDessertStockQuantity($userId: String!, $dessertId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateDessertStockIsFavorite($userId: String!, $dessertId: uuid!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateDessertStockDetail($userId: String!, $dessertId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomDessertMaster($userId: String!, $dessertName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_dessert_master_one(\n    object: {user_id: $userId, custom_dessert_name: $dessertName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_dessert_id\n    user_id\n    custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomDessertAndStocks($dessertId: uuid!) {\n  delete_custom_dessert_master(where: {custom_dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      custom_dessert_id\n      image_uri\n      custom_dessert_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_dessert_stocks(where: {dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      stock_id\n      dessert_id\n    }\n  }\n}": types.GetAllDessertMasterAndUnitAndStocksDocument,
    "query GetAllFishMasterAndUnitAndStocks {\n  GetFishMasterAndUnitAndStocks: fish_master(\n    order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomFishMasterAndUnitAndStocks: custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishMasterAndUnitAndStocks {\n  fish_master(order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomFishMasterAndUnitAndStocks {\n  custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishStockByUserIdAndFishId($userId: String!, $fishId: uuid!) {\n  fish_stocks(where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}) {\n    stock_id\n    user_id\n    fish_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertFishStock($object: fish_stocks_insert_input!) {\n  insert_fish_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    fish_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateFishStockQuantity($userId: String!, $fishId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateFishStockIsFavorite($userId: String!, $fishId: uuid!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateFishStockDetail($userId: String!, $fishId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomFishMaster($userId: String!, $fishName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_fish_master_one(\n    object: {user_id: $userId, custom_fish_name: $fishName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_fish_id\n    user_id\n    custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomFishAndStocks($fishId: uuid!) {\n  delete_custom_fish_master(where: {custom_fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      custom_fish_id\n      image_uri\n      custom_fish_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_fish_stocks(where: {fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      stock_id\n      fish_id\n    }\n  }\n}": types.GetAllFishMasterAndUnitAndStocksDocument,
    "query GetAllMeatMasterAndUnitAndStocks {\n  GetMeatMasterAndUnitAndStocks: meat_master(\n    order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomMeatMasterAndUnitAndStocks: custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatMasterAndUnitAndStocks {\n  meat_master(order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomMeatMasterAndUnitAndStocks {\n  custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatStockByUserIdAndMeatId($userId: String!, $meatId: uuid!) {\n  meat_stocks(where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}) {\n    stock_id\n    user_id\n    meat_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertMeatStock($object: meat_stocks_insert_input!) {\n  insert_meat_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    meat_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateMeatStockQuantity($userId: String!, $meatId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateMeatStockIsFavorite($userId: String!, $meatId: uuid!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateMeatStockDetail($userId: String!, $meatId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomMeatMaster($userId: String!, $meatName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_meat_master_one(\n    object: {user_id: $userId, custom_meat_name: $meatName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_meat_id\n    user_id\n    custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomMeatAndStocks($meatId: uuid!) {\n  delete_custom_meat_master(where: {custom_meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      custom_meat_id\n      image_uri\n      custom_meat_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_meat_stocks(where: {meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      stock_id\n      meat_id\n    }\n  }\n}": types.GetAllMeatMasterAndUnitAndStocksDocument,
    "query GetAllOtherMasterAndUnitAndStocks {\n  GetOtherMasterAndUnitAndStocks: other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomOtherMasterAndUnitAndStocks: custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherMasterAndUnitAndStocks {\n  other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomOtherMasterAndUnitAndStocks {\n  custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherStockByUserIdAndOtherId($userId: String!, $otherId: uuid!) {\n  other_stocks(where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}) {\n    stock_id\n    user_id\n    other_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertOtherStock($object: other_stocks_insert_input!) {\n  insert_other_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    other_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateOtherStockQuantity($userId: String!, $otherId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateOtherStockIsFavorite($userId: String!, $otherId: uuid!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateOtherStockDetail($userId: String!, $otherId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomOtherMaster($userId: String!, $otherName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_other_master_one(\n    object: {user_id: $userId, custom_other_name: $otherName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_other_id\n    user_id\n    custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomOtherAndStocks($otherId: uuid!) {\n  delete_custom_other_master(where: {custom_other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      custom_other_id\n      image_uri\n      custom_other_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_other_stocks(where: {other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      stock_id\n      other_id\n    }\n  }\n}": types.GetAllOtherMasterAndUnitAndStocksDocument,
    "query GetAllProteinSourceMasterAndUnitAndStocks {\n  GetProteinSourceMasterAndUnitAndStocks: protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomProteinSourceMasterAndUnitAndStocks: custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceMasterAndUnitAndStocks {\n  protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomProteinSourceMasterAndUnitAndStocks {\n  custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceStockByUserIdAndProteinSourceId($userId: String!, $proteinSourceId: uuid!) {\n  protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    stock_id\n    user_id\n    protein_source_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertProteinSourceStock($object: protein_source_stocks_insert_input!) {\n  insert_protein_source_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    protein_source_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateProteinSourceStockQuantity($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockIsFavorite($userId: String!, $proteinSourceId: uuid!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockDetail($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomProteinSourceMaster($userId: String!, $proteinSourceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_protein_source_master_one(\n    object: {user_id: $userId, custom_protein_source_name: $proteinSourceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_protein_source_id\n    user_id\n    custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomProteinSourceAndStocks($proteinSourceId: uuid!) {\n  delete_custom_protein_source_master(\n    where: {custom_protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      custom_protein_source_id\n      image_uri\n      custom_protein_source_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_protein_source_stocks(\n    where: {protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      stock_id\n      protein_source_id\n    }\n  }\n}": types.GetAllProteinSourceMasterAndUnitAndStocksDocument,
    "query GetAllSeasoningMasterAndUnitAndStocks {\n  GetSeasoningMasterAndUnitAndStocks: seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSeasoningMasterAndUnitAndStocks: custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningMasterAndUnitAndStocks {\n  seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSeasoningMasterAndUnitAndStocks {\n  custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningStockByUserIdAndSeasoningId($userId: String!, $seasoningId: uuid!) {\n  seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n  ) {\n    stock_id\n    user_id\n    seasoning_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSeasoningStock($object: seasoning_stocks_insert_input!) {\n  insert_seasoning_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    seasoning_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSeasoningStockQuantity($userId: String!, $seasoningId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSeasoningStockIsFavorite($userId: String!, $seasoningId: uuid!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSeasoningStockDetail($userId: String!, $seasoningId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSeasoningMaster($userId: String!, $seasoningName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_seasoning_master_one(\n    object: {user_id: $userId, custom_seasoning_name: $seasoningName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_seasoning_id\n    user_id\n    custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSeasoningAndStocks($seasoningId: uuid!) {\n  delete_custom_seasoning_master(\n    where: {custom_seasoning_id: {_eq: $seasoningId}}\n  ) {\n    affected_rows\n    returning {\n      custom_seasoning_id\n      image_uri\n      custom_seasoning_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_seasoning_stocks(where: {seasoning_id: {_eq: $seasoningId}}) {\n    affected_rows\n    returning {\n      stock_id\n      seasoning_id\n    }\n  }\n}": types.GetAllSeasoningMasterAndUnitAndStocksDocument,
    "query GetShoppingMemos {\n  shopping_memo {\n    shopping_memo_id\n    user_id\n    master_id\n    quantity\n  }\n}\n\nmutation InsertShoppingMemo($masterId: uuid!, $userId: String!, $quantity: Int!) {\n  insert_shopping_memo_one(\n    object: {master_id: $masterId, user_id: $userId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation UpdateShoppingMemo($shoppingMemoId: uuid!, $masterId: uuid!, $quantity: Int!) {\n  update_shopping_memo_by_pk(\n    pk_columns: {shopping_memo_id: $shoppingMemoId}\n    _set: {master_id: $masterId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemo($shoppingMemoId: uuid!) {\n  delete_shopping_memo_by_pk(shopping_memo_id: $shoppingMemoId) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemoByMasterId($userId: String!, $masterId: uuid!) {\n  delete_shopping_memo(\n    where: {user_id: {_eq: $userId}, master_id: {_eq: $masterId}}\n  ) {\n    affected_rows\n  }\n}": types.GetShoppingMemosDocument,
    "query GetAllSpiceMasterAndUnitAndStocks {\n  GetSpiceMasterAndUnitAndStocks: spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSpiceMasterAndUnitAndStocks: custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceMasterAndUnitAndStocks {\n  spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSpiceMasterAndUnitAndStocks {\n  custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceStockByUserIdAndSpiceId($userId: String!, $spiceId: uuid!) {\n  spice_stocks(where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}) {\n    stock_id\n    user_id\n    spice_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSpiceStock($object: spice_stocks_insert_input!) {\n  insert_spice_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    spice_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSpiceStockQuantity($userId: String!, $spiceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSpiceStockIsFavorite($userId: String!, $spiceId: uuid!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSpiceStockDetail($userId: String!, $spiceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSpiceMaster($userId: String!, $spiceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_spice_master_one(\n    object: {user_id: $userId, custom_spice_name: $spiceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_spice_id\n    user_id\n    custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSpiceAndStocks($spiceId: uuid!) {\n  delete_custom_spice_master(where: {custom_spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      custom_spice_id\n      image_uri\n      custom_spice_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_spice_stocks(where: {spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      stock_id\n      spice_id\n    }\n  }\n}": types.GetAllSpiceMasterAndUnitAndStocksDocument,
    "query GetAllStapleFoodMasterAndUnitAndStocks {\n  GetStapleFoodMasterAndUnitAndStocks: staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomStapleFoodMasterAndUnitAndStocks: custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodMasterAndUnitAndStocks {\n  staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomStapleFoodMasterAndUnitAndStocks {\n  custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodStockByUserIdAndStapleFoodId($userId: String!, $stapleFoodId: uuid!) {\n  staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    stock_id\n    user_id\n    staple_food_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertStapleFoodStock($object: staple_food_stocks_insert_input!) {\n  insert_staple_food_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    staple_food_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateStapleFoodStockQuantity($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockIsFavorite($userId: String!, $stapleFoodId: uuid!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockDetail($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomStapleFoodMaster($userId: String!, $stapleFoodName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_staple_food_master_one(\n    object: {user_id: $userId, custom_staple_food_name: $stapleFoodName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_staple_food_id\n    user_id\n    custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomStapleFoodAndStocks($stapleFoodId: uuid!) {\n  delete_custom_staple_food_master(\n    where: {custom_staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    affected_rows\n    returning {\n      custom_staple_food_id\n      image_uri\n      custom_staple_food_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_staple_food_stocks(where: {staple_food_id: {_eq: $stapleFoodId}}) {\n    affected_rows\n    returning {\n      stock_id\n      staple_food_id\n    }\n  }\n}": types.GetAllStapleFoodMasterAndUnitAndStocksDocument,
    "query GetUnitMaster {\n  unit_master {\n    unit_id\n    unit_name\n  }\n}": types.GetUnitMasterDocument,
    "query GetUser {\n  users {\n    id\n    email\n    created_at\n  }\n}": types.GetUserDocument,
    "query GetAllVegetableMasterAndUnitAndStocks {\n  GetVegetableMasterAndUnitAndStocks: vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomVegetableMasterAndUnitAndStocks: custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableMasterAndUnitAndStocks {\n  vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomVegetableMasterAndUnitAndStocks {\n  custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableStockByUserIdAndVegetableId($userId: String!, $vegetableId: uuid!) {\n  vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n  ) {\n    stock_id\n    user_id\n    vegetable_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertVegetableStock($object: vegetable_stocks_insert_input!) {\n  insert_vegetable_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    vegetable_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateVegetableStockQuantity($userId: String!, $vegetableId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateVegetableStockIsFavorite($userId: String!, $vegetableId: uuid!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateVegetableStockDetail($userId: String!, $vegetableId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomVegetableMaster($userId: String!, $vegetableName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_vegetable_master_one(\n    object: {user_id: $userId, custom_vegetable_name: $vegetableName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_vegetable_id\n    user_id\n    custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomVegetableAndStocks($vegetableId: uuid!) {\n  delete_custom_vegetable_master(\n    where: {custom_vegetable_id: {_eq: $vegetableId}}\n  ) {\n    affected_rows\n    returning {\n      custom_vegetable_id\n      image_uri\n      custom_vegetable_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_vegetable_stocks(where: {vegetable_id: {_eq: $vegetableId}}) {\n    affected_rows\n    returning {\n      stock_id\n      vegetable_id\n    }\n  }\n}": types.GetAllVegetableMasterAndUnitAndStocksDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllFridgeMaster {\n  custom_dessert_master {\n    id: custom_dessert_id\n    name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_fish_master {\n    id: custom_fish_id\n    name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_meat_master {\n    id: custom_meat_id\n    name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n  }\n  custom_other_master {\n    id: custom_other_id\n    name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_protein_source_master {\n    id: custom_protein_source_id\n    name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_seasoning_master {\n    id: custom_seasoning_id\n    name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_spice_master {\n    id: custom_spice_id\n    name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_staple_food_master {\n    id: custom_staple_food_id\n    name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_vegetable_master {\n    id: custom_vegetable_id\n    name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n  }\n  dessert_master {\n    id: dessert_id\n    name: dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  fish_master {\n    id: fish_id\n    name: fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  meat_master {\n    id: meat_id\n    name: meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: meat_master_meat_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  other_master {\n    id: other_id\n    name: other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  protein_source_master {\n    id: protein_source_id\n    name: protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  seasoning_master {\n    id: seasoning_id\n    name: seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  spice_master {\n    id: spice_id\n    name: spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  staple_food_master {\n    id: staple_food_id\n    name: staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  vegetable_master {\n    id: vegetable_id\n    name: vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n}"): (typeof documents)["query GetAllFridgeMaster {\n  custom_dessert_master {\n    id: custom_dessert_id\n    name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_fish_master {\n    id: custom_fish_id\n    name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_meat_master {\n    id: custom_meat_id\n    name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n  }\n  custom_other_master {\n    id: custom_other_id\n    name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_protein_source_master {\n    id: custom_protein_source_id\n    name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_seasoning_master {\n    id: custom_seasoning_id\n    name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_spice_master {\n    id: custom_spice_id\n    name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_staple_food_master {\n    id: custom_staple_food_id\n    name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  custom_vegetable_master {\n    id: custom_vegetable_id\n    name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n  }\n  dessert_master {\n    id: dessert_id\n    name: dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  fish_master {\n    id: fish_id\n    name: fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: fish_master_fish_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  meat_master {\n    id: meat_id\n    name: meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: meat_master_meat_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  other_master {\n    id: other_id\n    name: other_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: other_master_other_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: other_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  protein_source_master {\n    id: protein_source_id\n    name: protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  seasoning_master {\n    id: seasoning_id\n    name: seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  spice_master {\n    id: spice_id\n    name: spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: spice_master_spice_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  staple_food_master {\n    id: staple_food_id\n    name: staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n  vegetable_master {\n    id: vegetable_id\n    name: vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    stack: vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      expiration_date\n      incremental_unit\n      is_favorite\n      memo\n    }\n    unit_master: vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllDessertMasterAndUnitAndStocks {\n  GetDessertMasterAndUnitAndStocks: dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomDessertMasterAndUnitAndStocks: custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertMasterAndUnitAndStocks {\n  dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomDessertMasterAndUnitAndStocks {\n  custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertStockByUserIdAndDessertId($userId: String!, $dessertId: uuid!) {\n  dessert_stocks(where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}) {\n    stock_id\n    user_id\n    dessert_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertDessertStock($object: dessert_stocks_insert_input!) {\n  insert_dessert_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    dessert_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateDessertStockQuantity($userId: String!, $dessertId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateDessertStockIsFavorite($userId: String!, $dessertId: uuid!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateDessertStockDetail($userId: String!, $dessertId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomDessertMaster($userId: String!, $dessertName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_dessert_master_one(\n    object: {user_id: $userId, custom_dessert_name: $dessertName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_dessert_id\n    user_id\n    custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomDessertAndStocks($dessertId: uuid!) {\n  delete_custom_dessert_master(where: {custom_dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      custom_dessert_id\n      image_uri\n      custom_dessert_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_dessert_stocks(where: {dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      stock_id\n      dessert_id\n    }\n  }\n}"): (typeof documents)["query GetAllDessertMasterAndUnitAndStocks {\n  GetDessertMasterAndUnitAndStocks: dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomDessertMasterAndUnitAndStocks: custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertMasterAndUnitAndStocks {\n  dessert_master(\n    order_by: {dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id\n    display_name\n    dessert_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomDessertMasterAndUnitAndStocks {\n  custom_dessert_master(\n    order_by: {custom_dessert_master_dessert_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    dessert_id: custom_dessert_id\n    dessert_name: custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    dessert_master_unit_master: custom_dessert_master_unit_master {\n      unit_id\n      unit_name\n    }\n    dessert_master_dessert_stocks: custom_dessert_master_dessert_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetDessertStockByUserIdAndDessertId($userId: String!, $dessertId: uuid!) {\n  dessert_stocks(where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}) {\n    stock_id\n    user_id\n    dessert_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertDessertStock($object: dessert_stocks_insert_input!) {\n  insert_dessert_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    dessert_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateDessertStockQuantity($userId: String!, $dessertId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateDessertStockIsFavorite($userId: String!, $dessertId: uuid!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateDessertStockDetail($userId: String!, $dessertId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_dessert_stocks(\n    where: {user_id: {_eq: $userId}, dessert_id: {_eq: $dessertId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      dessert_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomDessertMaster($userId: String!, $dessertName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_dessert_master_one(\n    object: {user_id: $userId, custom_dessert_name: $dessertName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_dessert_id\n    user_id\n    custom_dessert_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomDessertAndStocks($dessertId: uuid!) {\n  delete_custom_dessert_master(where: {custom_dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      custom_dessert_id\n      image_uri\n      custom_dessert_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_dessert_stocks(where: {dessert_id: {_eq: $dessertId}}) {\n    affected_rows\n    returning {\n      stock_id\n      dessert_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllFishMasterAndUnitAndStocks {\n  GetFishMasterAndUnitAndStocks: fish_master(\n    order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomFishMasterAndUnitAndStocks: custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishMasterAndUnitAndStocks {\n  fish_master(order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomFishMasterAndUnitAndStocks {\n  custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishStockByUserIdAndFishId($userId: String!, $fishId: uuid!) {\n  fish_stocks(where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}) {\n    stock_id\n    user_id\n    fish_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertFishStock($object: fish_stocks_insert_input!) {\n  insert_fish_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    fish_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateFishStockQuantity($userId: String!, $fishId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateFishStockIsFavorite($userId: String!, $fishId: uuid!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateFishStockDetail($userId: String!, $fishId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomFishMaster($userId: String!, $fishName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_fish_master_one(\n    object: {user_id: $userId, custom_fish_name: $fishName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_fish_id\n    user_id\n    custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomFishAndStocks($fishId: uuid!) {\n  delete_custom_fish_master(where: {custom_fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      custom_fish_id\n      image_uri\n      custom_fish_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_fish_stocks(where: {fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      stock_id\n      fish_id\n    }\n  }\n}"): (typeof documents)["query GetAllFishMasterAndUnitAndStocks {\n  GetFishMasterAndUnitAndStocks: fish_master(\n    order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomFishMasterAndUnitAndStocks: custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishMasterAndUnitAndStocks {\n  fish_master(order_by: {fish_master_fish_stocks: {is_favorite: desc_nulls_last}}) {\n    fish_id\n    display_name\n    fish_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomFishMasterAndUnitAndStocks {\n  custom_fish_master(\n    order_by: {custom_fish_master_fish_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    fish_id: custom_fish_id\n    fish_name: custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    fish_master_unit_master: custom_fish_master_unit_master {\n      unit_id\n      unit_name\n    }\n    fish_master_fish_stocks: custom_fish_master_fish_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetFishStockByUserIdAndFishId($userId: String!, $fishId: uuid!) {\n  fish_stocks(where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}) {\n    stock_id\n    user_id\n    fish_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertFishStock($object: fish_stocks_insert_input!) {\n  insert_fish_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    fish_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateFishStockQuantity($userId: String!, $fishId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateFishStockIsFavorite($userId: String!, $fishId: uuid!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateFishStockDetail($userId: String!, $fishId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_fish_stocks(\n    where: {user_id: {_eq: $userId}, fish_id: {_eq: $fishId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      fish_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomFishMaster($userId: String!, $fishName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_fish_master_one(\n    object: {user_id: $userId, custom_fish_name: $fishName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_fish_id\n    user_id\n    custom_fish_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomFishAndStocks($fishId: uuid!) {\n  delete_custom_fish_master(where: {custom_fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      custom_fish_id\n      image_uri\n      custom_fish_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_fish_stocks(where: {fish_id: {_eq: $fishId}}) {\n    affected_rows\n    returning {\n      stock_id\n      fish_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllMeatMasterAndUnitAndStocks {\n  GetMeatMasterAndUnitAndStocks: meat_master(\n    order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomMeatMasterAndUnitAndStocks: custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatMasterAndUnitAndStocks {\n  meat_master(order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomMeatMasterAndUnitAndStocks {\n  custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatStockByUserIdAndMeatId($userId: String!, $meatId: uuid!) {\n  meat_stocks(where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}) {\n    stock_id\n    user_id\n    meat_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertMeatStock($object: meat_stocks_insert_input!) {\n  insert_meat_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    meat_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateMeatStockQuantity($userId: String!, $meatId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateMeatStockIsFavorite($userId: String!, $meatId: uuid!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateMeatStockDetail($userId: String!, $meatId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomMeatMaster($userId: String!, $meatName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_meat_master_one(\n    object: {user_id: $userId, custom_meat_name: $meatName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_meat_id\n    user_id\n    custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomMeatAndStocks($meatId: uuid!) {\n  delete_custom_meat_master(where: {custom_meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      custom_meat_id\n      image_uri\n      custom_meat_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_meat_stocks(where: {meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      stock_id\n      meat_id\n    }\n  }\n}"): (typeof documents)["query GetAllMeatMasterAndUnitAndStocks {\n  GetMeatMasterAndUnitAndStocks: meat_master(\n    order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomMeatMasterAndUnitAndStocks: custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatMasterAndUnitAndStocks {\n  meat_master(order_by: {meat_master_meat_stocks: {is_favorite: desc_nulls_last}}) {\n    meat_id\n    display_name\n    meat_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomMeatMasterAndUnitAndStocks {\n  custom_meat_master(\n    order_by: {custom_meat_master_meat_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    meat_id: custom_meat_id\n    meat_name: custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    meat_master_unit_master: custom_meat_master_unit_master {\n      unit_id\n      unit_name\n    }\n    meat_master_meat_stocks: custom_meat_master_meat_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetMeatStockByUserIdAndMeatId($userId: String!, $meatId: uuid!) {\n  meat_stocks(where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}) {\n    stock_id\n    user_id\n    meat_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertMeatStock($object: meat_stocks_insert_input!) {\n  insert_meat_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    meat_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateMeatStockQuantity($userId: String!, $meatId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateMeatStockIsFavorite($userId: String!, $meatId: uuid!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateMeatStockDetail($userId: String!, $meatId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_meat_stocks(\n    where: {user_id: {_eq: $userId}, meat_id: {_eq: $meatId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      meat_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomMeatMaster($userId: String!, $meatName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_meat_master_one(\n    object: {user_id: $userId, custom_meat_name: $meatName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_meat_id\n    user_id\n    custom_meat_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomMeatAndStocks($meatId: uuid!) {\n  delete_custom_meat_master(where: {custom_meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      custom_meat_id\n      image_uri\n      custom_meat_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_meat_stocks(where: {meat_id: {_eq: $meatId}}) {\n    affected_rows\n    returning {\n      stock_id\n      meat_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllOtherMasterAndUnitAndStocks {\n  GetOtherMasterAndUnitAndStocks: other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomOtherMasterAndUnitAndStocks: custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherMasterAndUnitAndStocks {\n  other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomOtherMasterAndUnitAndStocks {\n  custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherStockByUserIdAndOtherId($userId: String!, $otherId: uuid!) {\n  other_stocks(where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}) {\n    stock_id\n    user_id\n    other_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertOtherStock($object: other_stocks_insert_input!) {\n  insert_other_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    other_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateOtherStockQuantity($userId: String!, $otherId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateOtherStockIsFavorite($userId: String!, $otherId: uuid!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateOtherStockDetail($userId: String!, $otherId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomOtherMaster($userId: String!, $otherName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_other_master_one(\n    object: {user_id: $userId, custom_other_name: $otherName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_other_id\n    user_id\n    custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomOtherAndStocks($otherId: uuid!) {\n  delete_custom_other_master(where: {custom_other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      custom_other_id\n      image_uri\n      custom_other_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_other_stocks(where: {other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      stock_id\n      other_id\n    }\n  }\n}"): (typeof documents)["query GetAllOtherMasterAndUnitAndStocks {\n  GetOtherMasterAndUnitAndStocks: other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomOtherMasterAndUnitAndStocks: custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherMasterAndUnitAndStocks {\n  other_master(\n    order_by: {other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id\n    display_name\n    other_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomOtherMasterAndUnitAndStocks {\n  custom_other_master(\n    order_by: {custom_other_master_other_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    other_id: custom_other_id\n    other_name: custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    other_master_unit_master: custom_other_master_unit_master {\n      unit_id\n      unit_name\n    }\n    other_master_other_stocks: custom_other_master_other_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetOtherStockByUserIdAndOtherId($userId: String!, $otherId: uuid!) {\n  other_stocks(where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}) {\n    stock_id\n    user_id\n    other_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertOtherStock($object: other_stocks_insert_input!) {\n  insert_other_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    other_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateOtherStockQuantity($userId: String!, $otherId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateOtherStockIsFavorite($userId: String!, $otherId: uuid!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateOtherStockDetail($userId: String!, $otherId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_other_stocks(\n    where: {user_id: {_eq: $userId}, other_id: {_eq: $otherId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      other_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomOtherMaster($userId: String!, $otherName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_other_master_one(\n    object: {user_id: $userId, custom_other_name: $otherName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_other_id\n    user_id\n    custom_other_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomOtherAndStocks($otherId: uuid!) {\n  delete_custom_other_master(where: {custom_other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      custom_other_id\n      image_uri\n      custom_other_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_other_stocks(where: {other_id: {_eq: $otherId}}) {\n    affected_rows\n    returning {\n      stock_id\n      other_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllProteinSourceMasterAndUnitAndStocks {\n  GetProteinSourceMasterAndUnitAndStocks: protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomProteinSourceMasterAndUnitAndStocks: custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceMasterAndUnitAndStocks {\n  protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomProteinSourceMasterAndUnitAndStocks {\n  custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceStockByUserIdAndProteinSourceId($userId: String!, $proteinSourceId: uuid!) {\n  protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    stock_id\n    user_id\n    protein_source_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertProteinSourceStock($object: protein_source_stocks_insert_input!) {\n  insert_protein_source_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    protein_source_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateProteinSourceStockQuantity($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockIsFavorite($userId: String!, $proteinSourceId: uuid!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockDetail($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomProteinSourceMaster($userId: String!, $proteinSourceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_protein_source_master_one(\n    object: {user_id: $userId, custom_protein_source_name: $proteinSourceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_protein_source_id\n    user_id\n    custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomProteinSourceAndStocks($proteinSourceId: uuid!) {\n  delete_custom_protein_source_master(\n    where: {custom_protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      custom_protein_source_id\n      image_uri\n      custom_protein_source_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_protein_source_stocks(\n    where: {protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      stock_id\n      protein_source_id\n    }\n  }\n}"): (typeof documents)["query GetAllProteinSourceMasterAndUnitAndStocks {\n  GetProteinSourceMasterAndUnitAndStocks: protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomProteinSourceMasterAndUnitAndStocks: custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceMasterAndUnitAndStocks {\n  protein_source_master(\n    order_by: {protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id\n    display_name\n    protein_source_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomProteinSourceMasterAndUnitAndStocks {\n  custom_protein_source_master(\n    order_by: {custom_protein_source_master_protein_source_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    protein_source_id: custom_protein_source_id\n    protein_source_name: custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    protein_source_master_unit_master: custom_protein_source_master_unit_master {\n      unit_id\n      unit_name\n    }\n    protein_source_master_protein_source_stocks: custom_protein_source_master_protein_source_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetProteinSourceStockByUserIdAndProteinSourceId($userId: String!, $proteinSourceId: uuid!) {\n  protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    stock_id\n    user_id\n    protein_source_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertProteinSourceStock($object: protein_source_stocks_insert_input!) {\n  insert_protein_source_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    protein_source_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateProteinSourceStockQuantity($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockIsFavorite($userId: String!, $proteinSourceId: uuid!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateProteinSourceStockDetail($userId: String!, $proteinSourceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_protein_source_stocks(\n    where: {user_id: {_eq: $userId}, protein_source_id: {_eq: $proteinSourceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      protein_source_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomProteinSourceMaster($userId: String!, $proteinSourceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_protein_source_master_one(\n    object: {user_id: $userId, custom_protein_source_name: $proteinSourceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_protein_source_id\n    user_id\n    custom_protein_source_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomProteinSourceAndStocks($proteinSourceId: uuid!) {\n  delete_custom_protein_source_master(\n    where: {custom_protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      custom_protein_source_id\n      image_uri\n      custom_protein_source_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_protein_source_stocks(\n    where: {protein_source_id: {_eq: $proteinSourceId}}\n  ) {\n    affected_rows\n    returning {\n      stock_id\n      protein_source_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllSeasoningMasterAndUnitAndStocks {\n  GetSeasoningMasterAndUnitAndStocks: seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSeasoningMasterAndUnitAndStocks: custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningMasterAndUnitAndStocks {\n  seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSeasoningMasterAndUnitAndStocks {\n  custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningStockByUserIdAndSeasoningId($userId: String!, $seasoningId: uuid!) {\n  seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n  ) {\n    stock_id\n    user_id\n    seasoning_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSeasoningStock($object: seasoning_stocks_insert_input!) {\n  insert_seasoning_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    seasoning_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSeasoningStockQuantity($userId: String!, $seasoningId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSeasoningStockIsFavorite($userId: String!, $seasoningId: uuid!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSeasoningStockDetail($userId: String!, $seasoningId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSeasoningMaster($userId: String!, $seasoningName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_seasoning_master_one(\n    object: {user_id: $userId, custom_seasoning_name: $seasoningName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_seasoning_id\n    user_id\n    custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSeasoningAndStocks($seasoningId: uuid!) {\n  delete_custom_seasoning_master(\n    where: {custom_seasoning_id: {_eq: $seasoningId}}\n  ) {\n    affected_rows\n    returning {\n      custom_seasoning_id\n      image_uri\n      custom_seasoning_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_seasoning_stocks(where: {seasoning_id: {_eq: $seasoningId}}) {\n    affected_rows\n    returning {\n      stock_id\n      seasoning_id\n    }\n  }\n}"): (typeof documents)["query GetAllSeasoningMasterAndUnitAndStocks {\n  GetSeasoningMasterAndUnitAndStocks: seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSeasoningMasterAndUnitAndStocks: custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningMasterAndUnitAndStocks {\n  seasoning_master(\n    order_by: {seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id\n    display_name\n    seasoning_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSeasoningMasterAndUnitAndStocks {\n  custom_seasoning_master(\n    order_by: {custom_seasoning_master_seasoning_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    seasoning_id: custom_seasoning_id\n    seasoning_name: custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    seasoning_master_unit_master: custom_seasoning_master_unit_master {\n      unit_id\n      unit_name\n    }\n    seasoning_master_seasoning_stocks: custom_seasoning_master_seasoning_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSeasoningStockByUserIdAndSeasoningId($userId: String!, $seasoningId: uuid!) {\n  seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n  ) {\n    stock_id\n    user_id\n    seasoning_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSeasoningStock($object: seasoning_stocks_insert_input!) {\n  insert_seasoning_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    seasoning_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSeasoningStockQuantity($userId: String!, $seasoningId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSeasoningStockIsFavorite($userId: String!, $seasoningId: uuid!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSeasoningStockDetail($userId: String!, $seasoningId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_seasoning_stocks(\n    where: {user_id: {_eq: $userId}, seasoning_id: {_eq: $seasoningId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      seasoning_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSeasoningMaster($userId: String!, $seasoningName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_seasoning_master_one(\n    object: {user_id: $userId, custom_seasoning_name: $seasoningName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_seasoning_id\n    user_id\n    custom_seasoning_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSeasoningAndStocks($seasoningId: uuid!) {\n  delete_custom_seasoning_master(\n    where: {custom_seasoning_id: {_eq: $seasoningId}}\n  ) {\n    affected_rows\n    returning {\n      custom_seasoning_id\n      image_uri\n      custom_seasoning_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_seasoning_stocks(where: {seasoning_id: {_eq: $seasoningId}}) {\n    affected_rows\n    returning {\n      stock_id\n      seasoning_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetShoppingMemos {\n  shopping_memo {\n    shopping_memo_id\n    user_id\n    master_id\n    quantity\n  }\n}\n\nmutation InsertShoppingMemo($masterId: uuid!, $userId: String!, $quantity: Int!) {\n  insert_shopping_memo_one(\n    object: {master_id: $masterId, user_id: $userId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation UpdateShoppingMemo($shoppingMemoId: uuid!, $masterId: uuid!, $quantity: Int!) {\n  update_shopping_memo_by_pk(\n    pk_columns: {shopping_memo_id: $shoppingMemoId}\n    _set: {master_id: $masterId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemo($shoppingMemoId: uuid!) {\n  delete_shopping_memo_by_pk(shopping_memo_id: $shoppingMemoId) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemoByMasterId($userId: String!, $masterId: uuid!) {\n  delete_shopping_memo(\n    where: {user_id: {_eq: $userId}, master_id: {_eq: $masterId}}\n  ) {\n    affected_rows\n  }\n}"): (typeof documents)["query GetShoppingMemos {\n  shopping_memo {\n    shopping_memo_id\n    user_id\n    master_id\n    quantity\n  }\n}\n\nmutation InsertShoppingMemo($masterId: uuid!, $userId: String!, $quantity: Int!) {\n  insert_shopping_memo_one(\n    object: {master_id: $masterId, user_id: $userId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation UpdateShoppingMemo($shoppingMemoId: uuid!, $masterId: uuid!, $quantity: Int!) {\n  update_shopping_memo_by_pk(\n    pk_columns: {shopping_memo_id: $shoppingMemoId}\n    _set: {master_id: $masterId, quantity: $quantity}\n  ) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemo($shoppingMemoId: uuid!) {\n  delete_shopping_memo_by_pk(shopping_memo_id: $shoppingMemoId) {\n    shopping_memo_id\n    master_id\n    user_id\n    quantity\n  }\n}\n\nmutation DeleteShoppingMemoByMasterId($userId: String!, $masterId: uuid!) {\n  delete_shopping_memo(\n    where: {user_id: {_eq: $userId}, master_id: {_eq: $masterId}}\n  ) {\n    affected_rows\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllSpiceMasterAndUnitAndStocks {\n  GetSpiceMasterAndUnitAndStocks: spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSpiceMasterAndUnitAndStocks: custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceMasterAndUnitAndStocks {\n  spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSpiceMasterAndUnitAndStocks {\n  custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceStockByUserIdAndSpiceId($userId: String!, $spiceId: uuid!) {\n  spice_stocks(where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}) {\n    stock_id\n    user_id\n    spice_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSpiceStock($object: spice_stocks_insert_input!) {\n  insert_spice_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    spice_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSpiceStockQuantity($userId: String!, $spiceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSpiceStockIsFavorite($userId: String!, $spiceId: uuid!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSpiceStockDetail($userId: String!, $spiceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSpiceMaster($userId: String!, $spiceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_spice_master_one(\n    object: {user_id: $userId, custom_spice_name: $spiceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_spice_id\n    user_id\n    custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSpiceAndStocks($spiceId: uuid!) {\n  delete_custom_spice_master(where: {custom_spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      custom_spice_id\n      image_uri\n      custom_spice_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_spice_stocks(where: {spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      stock_id\n      spice_id\n    }\n  }\n}"): (typeof documents)["query GetAllSpiceMasterAndUnitAndStocks {\n  GetSpiceMasterAndUnitAndStocks: spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomSpiceMasterAndUnitAndStocks: custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceMasterAndUnitAndStocks {\n  spice_master(\n    order_by: {spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id\n    display_name\n    spice_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomSpiceMasterAndUnitAndStocks {\n  custom_spice_master(\n    order_by: {custom_spice_master_spice_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    spice_id: custom_spice_id\n    spice_name: custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    spice_master_unit_master: custom_spice_master_unit_master {\n      unit_id\n      unit_name\n    }\n    spice_master_spice_stocks: custom_spice_master_spice_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetSpiceStockByUserIdAndSpiceId($userId: String!, $spiceId: uuid!) {\n  spice_stocks(where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}) {\n    stock_id\n    user_id\n    spice_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertSpiceStock($object: spice_stocks_insert_input!) {\n  insert_spice_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    spice_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateSpiceStockQuantity($userId: String!, $spiceId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateSpiceStockIsFavorite($userId: String!, $spiceId: uuid!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateSpiceStockDetail($userId: String!, $spiceId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_spice_stocks(\n    where: {user_id: {_eq: $userId}, spice_id: {_eq: $spiceId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      spice_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomSpiceMaster($userId: String!, $spiceName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_spice_master_one(\n    object: {user_id: $userId, custom_spice_name: $spiceName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_spice_id\n    user_id\n    custom_spice_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomSpiceAndStocks($spiceId: uuid!) {\n  delete_custom_spice_master(where: {custom_spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      custom_spice_id\n      image_uri\n      custom_spice_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_spice_stocks(where: {spice_id: {_eq: $spiceId}}) {\n    affected_rows\n    returning {\n      stock_id\n      spice_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllStapleFoodMasterAndUnitAndStocks {\n  GetStapleFoodMasterAndUnitAndStocks: staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomStapleFoodMasterAndUnitAndStocks: custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodMasterAndUnitAndStocks {\n  staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomStapleFoodMasterAndUnitAndStocks {\n  custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodStockByUserIdAndStapleFoodId($userId: String!, $stapleFoodId: uuid!) {\n  staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    stock_id\n    user_id\n    staple_food_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertStapleFoodStock($object: staple_food_stocks_insert_input!) {\n  insert_staple_food_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    staple_food_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateStapleFoodStockQuantity($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockIsFavorite($userId: String!, $stapleFoodId: uuid!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockDetail($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomStapleFoodMaster($userId: String!, $stapleFoodName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_staple_food_master_one(\n    object: {user_id: $userId, custom_staple_food_name: $stapleFoodName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_staple_food_id\n    user_id\n    custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomStapleFoodAndStocks($stapleFoodId: uuid!) {\n  delete_custom_staple_food_master(\n    where: {custom_staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    affected_rows\n    returning {\n      custom_staple_food_id\n      image_uri\n      custom_staple_food_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_staple_food_stocks(where: {staple_food_id: {_eq: $stapleFoodId}}) {\n    affected_rows\n    returning {\n      stock_id\n      staple_food_id\n    }\n  }\n}"): (typeof documents)["query GetAllStapleFoodMasterAndUnitAndStocks {\n  GetStapleFoodMasterAndUnitAndStocks: staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomStapleFoodMasterAndUnitAndStocks: custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodMasterAndUnitAndStocks {\n  staple_food_master(\n    order_by: {staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id\n    display_name\n    staple_food_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomStapleFoodMasterAndUnitAndStocks {\n  custom_staple_food_master(\n    order_by: {custom_staple_food_master_staple_food_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    staple_food_id: custom_staple_food_id\n    staple_food_name: custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    staple_food_master_unit_master: custom_staple_food_master_unit_master {\n      unit_id\n      unit_name\n    }\n    staple_food_master_staple_food_stocks: custom_staple_food_master_staple_food_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetStapleFoodStockByUserIdAndStapleFoodId($userId: String!, $stapleFoodId: uuid!) {\n  staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    stock_id\n    user_id\n    staple_food_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertStapleFoodStock($object: staple_food_stocks_insert_input!) {\n  insert_staple_food_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    staple_food_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateStapleFoodStockQuantity($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockIsFavorite($userId: String!, $stapleFoodId: uuid!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateStapleFoodStockDetail($userId: String!, $stapleFoodId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_staple_food_stocks(\n    where: {user_id: {_eq: $userId}, staple_food_id: {_eq: $stapleFoodId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      staple_food_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomStapleFoodMaster($userId: String!, $stapleFoodName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_staple_food_master_one(\n    object: {user_id: $userId, custom_staple_food_name: $stapleFoodName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_staple_food_id\n    user_id\n    custom_staple_food_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomStapleFoodAndStocks($stapleFoodId: uuid!) {\n  delete_custom_staple_food_master(\n    where: {custom_staple_food_id: {_eq: $stapleFoodId}}\n  ) {\n    affected_rows\n    returning {\n      custom_staple_food_id\n      image_uri\n      custom_staple_food_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_staple_food_stocks(where: {staple_food_id: {_eq: $stapleFoodId}}) {\n    affected_rows\n    returning {\n      stock_id\n      staple_food_id\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetUnitMaster {\n  unit_master {\n    unit_id\n    unit_name\n  }\n}"): (typeof documents)["query GetUnitMaster {\n  unit_master {\n    unit_id\n    unit_name\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetUser {\n  users {\n    id\n    email\n    created_at\n  }\n}"): (typeof documents)["query GetUser {\n  users {\n    id\n    email\n    created_at\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAllVegetableMasterAndUnitAndStocks {\n  GetVegetableMasterAndUnitAndStocks: vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomVegetableMasterAndUnitAndStocks: custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableMasterAndUnitAndStocks {\n  vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomVegetableMasterAndUnitAndStocks {\n  custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableStockByUserIdAndVegetableId($userId: String!, $vegetableId: uuid!) {\n  vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n  ) {\n    stock_id\n    user_id\n    vegetable_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertVegetableStock($object: vegetable_stocks_insert_input!) {\n  insert_vegetable_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    vegetable_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateVegetableStockQuantity($userId: String!, $vegetableId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateVegetableStockIsFavorite($userId: String!, $vegetableId: uuid!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateVegetableStockDetail($userId: String!, $vegetableId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomVegetableMaster($userId: String!, $vegetableName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_vegetable_master_one(\n    object: {user_id: $userId, custom_vegetable_name: $vegetableName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_vegetable_id\n    user_id\n    custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomVegetableAndStocks($vegetableId: uuid!) {\n  delete_custom_vegetable_master(\n    where: {custom_vegetable_id: {_eq: $vegetableId}}\n  ) {\n    affected_rows\n    returning {\n      custom_vegetable_id\n      image_uri\n      custom_vegetable_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_vegetable_stocks(where: {vegetable_id: {_eq: $vegetableId}}) {\n    affected_rows\n    returning {\n      stock_id\n      vegetable_id\n    }\n  }\n}"): (typeof documents)["query GetAllVegetableMasterAndUnitAndStocks {\n  GetVegetableMasterAndUnitAndStocks: vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n  GetCustomVegetableMasterAndUnitAndStocks: custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableMasterAndUnitAndStocks {\n  vegetable_master(\n    order_by: {vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id\n    display_name\n    vegetable_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetCustomVegetableMasterAndUnitAndStocks {\n  custom_vegetable_master(\n    order_by: {custom_vegetable_master_vegetable_stocks: {is_favorite: desc_nulls_last}}\n  ) {\n    vegetable_id: custom_vegetable_id\n    vegetable_name: custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    vegetable_master_unit_master: custom_vegetable_master_uint_master {\n      unit_id\n      unit_name\n    }\n    vegetable_master_vegetable_stocks: custom_vegetable_master_vegetable_stocks {\n      stock_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nquery GetVegetableStockByUserIdAndVegetableId($userId: String!, $vegetableId: uuid!) {\n  vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n  ) {\n    stock_id\n    user_id\n    vegetable_id\n    quantity\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation InsertVegetableStock($object: vegetable_stocks_insert_input!) {\n  insert_vegetable_stocks_one(object: $object) {\n    quantity\n    stock_id\n    user_id\n    vegetable_id\n    incremental_unit\n    expiration_date\n    memo\n    is_favorite\n  }\n}\n\nmutation UpdateVegetableStockQuantity($userId: String!, $vegetableId: uuid!, $quantity: Int!, $expirationDate: date) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, expiration_date: $expirationDate}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      expiration_date\n    }\n  }\n}\n\nmutation UpdateVegetableStockIsFavorite($userId: String!, $vegetableId: uuid!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      is_favorite\n    }\n  }\n}\n\nmutation UpdateVegetableStockDetail($userId: String!, $vegetableId: uuid!, $quantity: Int!, $incrementalUnit: Int!, $expirationDate: date!, $memo: String!, $isFavorite: Boolean!) {\n  update_vegetable_stocks(\n    where: {user_id: {_eq: $userId}, vegetable_id: {_eq: $vegetableId}}\n    _set: {quantity: $quantity, incremental_unit: $incrementalUnit, expiration_date: $expirationDate, memo: $memo, is_favorite: $isFavorite}\n  ) {\n    returning {\n      stock_id\n      user_id\n      vegetable_id\n      quantity\n      incremental_unit\n      expiration_date\n      memo\n      is_favorite\n    }\n  }\n}\n\nmutation InsertCustomVegetableMaster($userId: String!, $vegetableName: String!, $displayName: String!, $imageUri: String!, $defaultExpirationPeriod: Int!, $unitId: Int!) {\n  insert_custom_vegetable_master_one(\n    object: {user_id: $userId, custom_vegetable_name: $vegetableName, display_name: $displayName, image_uri: $imageUri, default_expiration_period: $defaultExpirationPeriod, unit_id: $unitId}\n  ) {\n    custom_vegetable_id\n    user_id\n    custom_vegetable_name\n    display_name\n    image_uri\n    default_expiration_period\n    unit_id\n  }\n}\n\nmutation DeleteCustomVegetableAndStocks($vegetableId: uuid!) {\n  delete_custom_vegetable_master(\n    where: {custom_vegetable_id: {_eq: $vegetableId}}\n  ) {\n    affected_rows\n    returning {\n      custom_vegetable_id\n      image_uri\n      custom_vegetable_name\n      default_expiration_period\n      display_name\n      unit_id\n    }\n  }\n  delete_vegetable_stocks(where: {vegetable_id: {_eq: $vegetableId}}) {\n    affected_rows\n    returning {\n      stock_id\n      vegetable_id\n    }\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;